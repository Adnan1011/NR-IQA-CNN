name: "NR_IQA_CNN"
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "scores"
  include {
    phase: TRAIN
  }  
  data_param {
    source: "examples/IQA_dataset/live_fastfading_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "scores"
  include {
    phase: TEST
  }  
  data_param {
    source: "examples/IQA_dataset/live_fastfading_val_lmdb"
    batch_size: 1
    backend: LMDB
  }
}
layer {
  name: "conv"
  type: "Convolution"
  bottom: "data"
  top: "conv"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 50
    kernel_size: 7
    stride: 1
    pad: 0
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "pool_max"
  type: "Pooling"
  bottom: "conv"
  top: "pool_max"
  pooling_param {
    pool: MAX
    kernel_size: 26
    stride: 1
  }
}
layer {
  name: "pool_min"
  type: "Pooling"
  bottom: "conv"
  top: "pool_min"
  pooling_param {
    pool: MIN
    kernel_size: 26
    stride: 1
  }
}
layer {
  name: "pooled_output"
  type: "Concat"
  bottom: "pool_max"
  bottom: "pool_min"  
  top: "pooled_output"
}
layer {
  name: "fc1"
  type: "InnerProduct"
  bottom: "pooled_output"
  top: "fc1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 800
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "fc1"
  top: "fc1"
  relu_param {
    negative_slope: 0
  }
}
layer {
  name: "drop"
  type: "Dropout"
  bottom: "fc1"
  top: "fc1"
  dropout_param {
    dropout_ratio: 0.5
    scale_test: true
  }
}
layer {
  name: "fc2"
  type: "InnerProduct"
  bottom: "fc1"
  top: "fc2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "fc2"
  top: "fc2"
  relu_param {
    negative_slope: 0
  }
}
layer {
  name: "loss"
  type: "SVRLoss"
  bottom: "fc2"
  bottom: "scores"
  top: "loss"
  loss_weight: 1
}
